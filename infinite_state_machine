"""
Create a finite automaton that has three states. Finite automatons are the same as finite state machines for our purposes.

Our simple automaton, accepts the language of A, defined as {0, 1} and should have three states: q1, q2, and q3. Here is the description if the states:

q1 is our start state, we begin reading commands from here
q2 is our accept state, we return true if this is our last state
And the transitions:

q1 moves to q2 when given a 1, and stays at q1 when given a 0
q2 moves to q3 when given a 0, and stays at q2 when given a 1
q3 moves to q2 when given a 0 or 1
The automaton should return whether we end in our accepted state (q2), or not (true/false).
"""

class Automaton(object):

    def __init__(self):
        self.states = []

    def read_commands(self, commands):
        if len(commands)==1: return commands==['1']
        if commands.index('1')==-1: return False
        c, i = commands[(commands.index('1')+1):], 0
        while len(c)!= 0 and i<len(c)-1:
            if c[i]=='0': 
                if i==len(c)-2: c[i]='1'
                del c[i+1]
            i+=1
        return c[-1]=='1'

my_automaton = Automaton()
